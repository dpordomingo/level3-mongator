<?php

    public function __construct(\Level3\Hal\ResourceBuilder $builder, $document)
    {
        parent::__construct($builder, $document);
        $this->initAllowedKeys();
    }

    private function initAllowedKeys()
    {
        $this->allowedKeys = array(
{% for name in config_class.fields|keys %}
{% if config_class.fields[name].hideFromApi | default(false) == false %}
            '{{ name }}',
{% endif %}
{% endfor %}
        );
    }

    protected function setData()
    {
        $data = $this->extractBasicInfo();
        $data['id'] = (string) $data['id'];
{# embeddedsOne #}
{% for name in config_class.embeddedsOne|keys %}
        $data['{{ name }}'] = $this->extract{{ name|ucfirst }}();
{% endfor %}
{# embeddedsMany #}
{% for name in config_class.embeddedsMany|keys %}
        $data['{{ name }}'] = $this->extract{{ name|ucfirst }}();
{% endfor %}
        $this->getBuilder()->withData($data);
    }

    protected function setLinks()
    {
{# referencesOne #}
{% for name in config_class.referencesOne|keys %}
        $referenced = $this->getDocument()->get{{ name|ucfirst }}();
        if ($referenced) {
            $this->getBuilder()->withLinkToResource('{{ name }}',
                '{{ extension.getResourceKey(config_class.referencesOne[name].class) }}', new \Level3\Messages\Parameters(['id' => $referenced->getId()]), (string) $referenced->getId()
            );
        }
{% endfor %}

{# referencesMany #}
{% for name in config_class.referencesMany|keys %}
        foreach ($this->getDocument()->get{{ name|ucfirst }}() as $relation) {
            $this->getBuilder()->withLinkToResource('{{ name }}',
                '{{ extension.getResourceKey(config_class.referencesMany[name].class) }}', new \Level3\Messages\Parameters(['id' => $relation->getId()]), (string) $relation->getId()
            );
        }
{% endfor %}
    }

{# embeddedsOne #}
{% for name in config_class.embeddedsOne|keys %}
    protected function extract{{ name|ucfirst }}()
    {
        ${{ name }} = \$this->getDocument()->get{{ name|ucfirst }}();
        if (!${{ name }}) return null;
        return ${{ name }}->toArray();
    }
{% endfor %}

{# embeddedsMany #}
{% for name in config_class.embeddedsMany|keys %}
    protected function extract{{ name|ucfirst }}()
    {
        ${{ name }} = [];
        foreach($this->getDocument()->get{{ name|ucfirst }}() as $elem) ${{ name }}[] = $elem->toArray();

        return ${{ name }};
    }
{% endfor %}
